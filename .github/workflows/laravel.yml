name: Laravel CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  laravel:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: stonkspizza
        ports: ["3306:3306"]
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, bcmath, pdo_mysql
          coverage: none

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Inject DB secrets into .env
        run: |
          php -r "file_put_contents('.env', str_replace(
            ['DB_DATABASE=', 'DB_USERNAME=', 'DB_PASSWORD='],
            ['DB_DATABASE=' . '${{ secrets.DB_DATABASE }}',
             'DB_USERNAME=' . '${{ secrets.DB_USERNAME }}',
             'DB_PASSWORD=' . '${{ secrets.DB_PASSWORD }}'],
            file_get_contents('.env')
          ));"

      - name: Generate Laravel key
        run: php artisan key:generate

      - name: Run PHP syntax check
        run: find app/ -type f -name "*.php" -exec php -l {} \;

      - name: Run Laravel Pint
        run: ./vendor/bin/pint --test

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint --if-present

      - name: Build frontend assets
        run: npm run build

      - name: Run migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: php artisan migrate --force

      - name: Run tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: php artisan test

  docker:
    runs-on: ubuntu-latest
    needs: laravel

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/stonkspizza:latest
